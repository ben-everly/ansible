---
- hosts: all
  vars:
    home: "{{ lookup('env', 'HOME') }}"
    apt_packages:
      - automake
      - bash
      - composer
      - curl
      - docker-ce
      - docker-ce-cli
      - fonts-firacode
      - git
      - grep
      - jq # json prettifier
      - kitty
      - less
      - neovim
      - nodejs
      - npm
      - pkg-config
      - php
      - php-cli
      - php-curl
      - php-mbstring
      - python2
      - python3
      - python3-apt
      - python3-neovim
      - python3-pip
      - rcm
      - ruby-full
      - sed
      - silversearcher-ag
      - tmux
      - universal-ctags
      - unzip
      - vim
      - zsh
  tasks:
      - name: apt installs for debian 11
        become: yes
        block:
          - name: upgrade dist
            apt:
              upgrade: dist
              update_cache: yes

          - name: add docker signing key
            apt_key:
              url: https://download.docker.com/linux/debian/gpg
              state: present

          - name: add docker apt repository
            apt_repository:
              repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
              state: present
              filename: docker

          - name: Install apt packages
            apt:
              name: "{{ apt_packages }}"
              state: present
              update_cache: yes

          - name: apt cleanup
            apt:
              autoremove: yes

      - name: install pip packages
        pip: 
          name: pynvim

      - name: install ruby packages
        become: yes
        gem:
          name: neovim

      - name: install npm packages
        become: yes
        npm:
          name: neovim
          global: yes

      - name: dotfiles
        block:
          - name: clone dotfiles repo
            git:
              repo: "https://github.com/ben-everly/dotfiles"
              dest: "{{ home }}/.dotfiles"
            register: dotfiles

          - name: update dotfiles
            shell: rcup -f
            when: dotfiles.changed

      - name: install gh cli tool
        block:
          - name: find latest release of gh cli
            uri:
              url: https://api.github.com/repos/cli/cli/releases/latest
            register: download

          - set_fact:
              asset: "{{ download.json.assets | select('match', '.*amd64.deb') | first }}"
          - set_fact:
              filename: "./tmp/{{ asset.name }}"
              url: "{{ asset.browser_download_url }}"

          - name: check if latest version of gh cli is already downloaded
            stat:
              path: "{{ filename }}"
            register: version

          - name: download latest version of gh cli
            get_url:
              url: "{{ url }}"
              dest: "{{ filename }}"
            when: not version.stat.exists

          - name: install latest version of gh cli
            apt: deb="{{ filename }}"
            become: yes
            when: not version.stat.exists

      - name: install dbxcli tool
        block:
          - name: find latest release of dbxcli
            uri:
              url: https://api.github.com/repos/dropbox/dbxcli/releases/latest
            register: download

          - set_fact:
              asset: "{{ download.json.assets | select('match', '.*linux-amd64') | first }}"
          - set_fact:
              filename: "./tmp/{{ download.json.name}}-{{ asset.name }}"
              url: "{{ asset.browser_download_url }}"

          - name: check if latest version of dbxcli is already downloaded
            stat:
              path: "{{ filename }}"
            register: version

          - name: download latest version of dbxcli
            get_url:
              url: "{{ url }}"
              dest: "{{ filename }}"
            when: not version.stat.exists

          - name: copy executable into path
            copy:
              src: "{{ filename }}"
              dest: /usr/local/bin/dbxcli
              mode: '0755'
            become: yes
            when: not version.stat.exists
